% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate}
\alias{simulate}
\title{Simulate data and statistical models.}
\usage{
simulate(func, params = NULL, n.sims = 5000, boot = FALSE,
  bootParams = NULL, parallel = c("no", "multicore", "snow"), ncpus = 1,
  cl = NULL, ...)
}
\arguments{
\item{func}{A user-defined function that generates data and performs a
statistical test on that data.}

\item{params}{A list of parameters to be passed to \code{func}. Each of these
parameters can be a vector of multiple values, and \code{simulate} will
test each combination of these values.}

\item{n.sims}{Number of simulations (per combination of params).}

\item{boot}{Whether or not to use bootstrapped data to pass along to your
simulation.}

\item{bootParams}{If \code{boot=TRUE}, then use \code{bootParams} to pass
along a named list of arguments to the \code{\link{boot}} function. The
statistic and R parameters will be filled automatically, but at minimum you
will need to pass along data. Information about parallel processing will
also be passed along automatically.}

\item{parallel}{The type of parallel operation to be used (if any).}

\item{ncpus}{Integer: the number of processes to be used in parallel
operation.}

\item{cl}{An optional \code{parallel} or \code{snow} cluster for use if
\code{parallel = 'snow'}. If not supplied, a cluster on the local machine
is created for the duration of the simulations.}

\item{...}{Additional arguments to be passed to \code{func}. If you do not
need to vary certain parameters in your model, you can pass them to
\code{func} here.}
}
\value{
Returns a data frame with one row per simulation. \code{func} must
  return a (named) vector with the results you wish to capture; these vectors
  will then be combined for the final output.
}
\description{
\code{simulate} simulates data by generating samples according to a user-
defined function. These data can then be used to examine whatever statistic
you wish. This function is intentionally kept general and flexible, to allow
for a wide variety of applications.
}
\examples{
lm_test <- function(N, b0, b1) {
x <- rnorm(N, 0, 1)
y <- rnorm(N, b0 + b1*x, sqrt(1 - b1^2))
data <- data.frame(y, x)
model <- lm(y ~ x, data)

# capture output from model summary
est <- coef(summary(model))['x', 'Estimate']
se <- coef(summary(model))['x', 'Std. Error']
p <- coef(summary(model))['x', 'Pr(>|t|)']

return(c(xm=mean(x), xsd=sd(x), ym=mean(y), ysd=sd(y), est=est, se=se, p=p,
    sig=est > 0 & p <= .05))
}

# test power for two sample sizes: N=200 and N=300, with 5000 sims for each
power_sim <- simulate(lm_test, params=list(N=c(200, 300)), n.sims=5000, b0=0, b1=.15)
}
\seealso{
\code{\link{boot}}
}

